# SPDX-FileCopyrightText: 2023 Linutronix GmbH
#
# SPDX-License-Identifier: GPL-3.0-or-later

[package]
name = "detnetctl"
description = "A TSN/DetNet Node Controller with Interference Protection"
version = "0.1.0"
edition = "2021"
authors = ["Florian Kauer <florian.kauer@linutronix.de>"]
license = "GPL-3.0-or-later"

[features]
default = ["dbus", "bpf", "detd", "sysrepo", "netlink", "ptp"]
dbus = ["dep:dbus", "dep:dbus-crossroads", "dep:dbus-tokio", "dep:async-shutdown"]
bpf = ["dep:libbpf-rs", "dep:libbpf-cargo", "dep:log", "dep:nix"]
detd = ["dep:bytes", "dep:prost"]
sysrepo = ["dep:sysrepo", "dep:yang2", "dep:ipnet"]
netlink = ["dep:rtnetlink","dep:ethtool","dep:netlink-packet-route"]
ptp = ["dep:bincode","dep:nix","dep:ethtool"]

[dependencies]
anyhow = "1.0"
tokio = {version = "1.0", features=["rt", "net", "macros", "sync", "signal", "time", "process"]}
async-trait = { version = "0.1.67" }
eui48 = "1.1.0"
env_logger = "0.10.0"
num-traits = "0.2"
flagset = "0.4.3"
num-derive = "0.2"
chrono = "0.4.24"
rand = "0.8.5"
regex = "1.8.4"
semver = "1.0.21"

serde = { version = "1.0", features = ["derive"] }
serde_yaml = { version = "0.9" }
serde_repr = "0.1"

clap = { version = "4.2.0", features = ["derive","wrap_help","cargo"] }

futures = "0.3.11"

# Convenience derive macros for structs with options
# Needs to be in a separate crate since it is a proc-macro
options_struct_derive = { path = "src/configuration/options_struct_derive" }

### dbus feature
# From github to include the set_sender feature just merged TODO replace when released
dbus = { git = "https://github.com/diwic/dbus-rs", branch = "master", optional = true }
dbus-crossroads = { git = "https://github.com/diwic/dbus-rs", branch = "master", optional = true }
dbus-tokio = { git = "https://github.com/diwic/dbus-rs", branch = "master", optional = true }

async-shutdown = { version = "0.1.2", optional = true }

### bpf feature
libbpf-rs = { version = "0.21.2", optional = true }
log = { version = "0.4.17", optional = true }
nix = { version = "0.24", default-features = false, features = ["net", "user", "time", "poll"], optional = true }

### detd feature
bytes = { version = "1.4.0", optional = true }
prost = { version = "0.11.6", optional = true }

### sysrepo feature
sysrepo = { version = "0.4.0", optional = true }
yang2 = { version = "0.7", optional = true }
ipnet = { version = "2.7.2", optional = true }

### netlink feature
rtnetlink = { version = "0.13.1", optional = true }
ethtool = { version = "0.2.5", optional = true }
netlink-packet-route = { version = "0.17.0", optional = true }

### ptp feature
bincode = { version = "1.3.3", optional = true }

### for detnetctl-run

[build-dependencies]
### bpf feature
libbpf-cargo = { version = "0.21.2", optional = true }

### detd feature
prost-build = "0.11.6"

[dev-dependencies]
mockall = "0.11.3"
tokio-test = "0.4.2"
tempfile = "3.4.0"
const_format = "0.2.32"

# Some of these lints might be unreasonable for a growing code base,
# but apply to the current state and might be removed later if needed.
[lints.rust]
absolute_paths_not_starting_with_crate = "warn"
elided_lifetimes_in_paths = "warn"
explicit_outlives_requirements = "warn"
ffi_unwind_calls = "warn"
future_incompatible = "warn"
# fuzzy_provenance_casts = "deny" # TODO currently unstable, enable when stable
let_underscore_lock = "warn"
let_underscore_drop = "warn"
# lossy_provenance_casts = "deny" # TODO currently unstable, enable when stable
macro_use_extern_crate = "warn"
meta_variable_misuse = "warn"
missing_abi = "warn"
missing_docs = "warn"
# multiple_supertrait_upcastable = "warn" # TODO currently unstable, enable when stable
# must_not_suspend = "warn" # TODO currently unstable, enable when stable
non_ascii_idents = "deny"
nonstandard_style = "warn"
rust_2021_incompatible_closure_captures = "warn"
rust_2021_incompatible_or_patterns = "warn"
rust_2021_prefixes_incompatible_syntax = "warn"
rust_2021_prelude_collisions = "warn"
single_use_lifetimes = "warn"
trivial_casts = "warn"
trivial_numeric_casts = "warn"
# unnameable_types = "warn" # TODO currently unstable, enable when stable
unsafe_op_in_unsafe_fn = "warn"
unreachable_pub = "warn"
unused = "warn"
unused_lifetimes = "warn"
unused_qualifications = "warn"
unused_tuple_struct_fields = "warn"
variant_size_differences = "warn"

[lints.clippy]
all = "deny"
pedantic = "deny"
nursery = "warn"
as_conversions = "deny"
as_underscore = "deny"
assertions_on_result_states = "deny"
create_dir = "warn"
dbg_macro = "warn"
decimal_literal_representation = "warn"
default_union_representation = "deny"
deref_by_slicing = "warn"
empty_drop = "warn"
empty_structs_with_brackets = "warn"
filetype_is_file = "warn"
float_cmp_const = "deny"
fn_to_numeric_cast_any = "deny"
format_push_string = "deny"
if_then_some_else_none = "deny"
impl_trait_in_params = "deny"
integer_division = "deny"
lossy_float_literal = "warn"
map_err_ignore = "warn"
mem_forget = "deny"
mixed_read_write_in_expression = "deny"
modulo_arithmetic = "warn"
multiple_inherent_impl = "deny"
multiple_unsafe_ops_per_block = "warn"
mutex_atomic = "warn"
non_ascii_literal = "warn"
partial_pub_fields = "warn"
rc_buffer = "warn"
rc_mutex = "warn"
rest_pat_in_fully_bound_structs = "warn"
same_name_method = "deny"
self_named_module_files = "deny"
unseparated_literal_suffix = "deny"
shadow_unrelated = "warn"
str_to_string = "warn"
string_slice = "deny"
string_to_string = "deny"
suspicious_xor_used_as_pow = "warn"
try_err = "deny"
undocumented_unsafe_blocks = "warn"
unnecessary_safety_comment = "warn"
unnecessary_safety_doc = "warn"
unnecessary_self_imports = "deny"
unneeded_field_pattern = "deny"
verbose_file_reads = "warn"

[[bin]]
name = "detnetctl-run"
required-features = ["dbus"]
